# GitHub Actions Workflow: Build and Deploy to VPS
# - Triggers on push to the master branch.
# - Builds and pushes a Docker image to Docker Hub.
# - Deploys the Docker Compose file to a remote VPS.
# - Starts the application on the VPS.

name: Build and Deploy to VPS

on:
  release:
    types:
      - published

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: gzgestaoprod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gzgestao:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gzgestao:${{ env.VERSION }}
            
      - name: Deploy docker compose file to VPS
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.VPS_USER }}
          server: ${{ secrets.VPS_HOST }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: './docker-compose.prod.yml'
          remote_path: '/home/deploy/gzgestao'
          sftpArgs: '-o ConnectTimeout=5'

      - name: Starting Application
        uses: appleboy/ssh-action@v1.0.3
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /home/deploy/gzgestao
            
            # Autenticar no Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            sudo docker compose -f docker-compose.prod.yml down --rmi all
            
            echo "DOCKER_IMAGE=\"${{ secrets.DOCKERHUB_USERNAME }}/gzgestao:latest\"" > .env
            echo "SPRING_DATASOURCE_URL=\"${{ secrets.SPRING_DATASOURCE_URL }}\"" >> .env
            echo "SPRING_DATASOURCE_USERNAME=\"${{ secrets.SPRING_DATASOURCE_USERNAME }}\"" >> .env
            echo "SPRING_DATASOURCE_PASSWORD=\"${{ secrets.SPRING_DATASOURCE_PASSWORD }}\"" >> .env
            echo "JWT_PUBLIC_KEY=\"${{ secrets.JWT_PUBLIC_KEY }}\"" >> .env
            echo "JWT_PRIVATE_KEY=\"${{ secrets.JWT_PRIVATE_KEY }}\"" >> .env
            
            
            # Verificar o conteúdo do arquivo .env para confirmação
            echo "Generated .env file:"
            sudo cat .env

            sudo docker compose -f docker-compose.prod.yml up -d